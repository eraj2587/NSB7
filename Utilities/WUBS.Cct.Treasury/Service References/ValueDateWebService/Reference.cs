//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WUBS.Cct.Treasury.Service_References.ValueDateWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ValueDateWebService.ValueDateServiceSoap")]
    public interface ValueDateServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentValueDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetPaymentValueDateResponse GetPaymentValueDate(GetPaymentValueDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentValueDate", ReplyAction="*")]
        System.Threading.Tasks.Task<GetPaymentValueDateResponse> GetPaymentValueDateAsync(GetPaymentValueDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValueDateFromReleaseDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetValueDateFromReleaseDateResponse GetValueDateFromReleaseDate(GetValueDateFromReleaseDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValueDateFromReleaseDate", ReplyAction="*")]
        System.Threading.Tasks.Task<GetValueDateFromReleaseDateResponse> GetValueDateFromReleaseDateAsync(GetValueDateFromReleaseDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentMinimumValueDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetPaymentMinimumValueDate(int orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentMinimumValueDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime> GetPaymentMinimumValueDateAsync(int orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGeneratePaymentValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GeneratePaymentValueDateDetails[] GetGeneratePaymentValueDates(int clientOrderId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGeneratePaymentValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GeneratePaymentValueDateDetails[]> GetGeneratePaymentValueDatesAsync(int clientOrderId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePaymentValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GeneratePaymentValueDates(int clientOrderId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GeneratePaymentValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GeneratePaymentValueDatesAsync(int clientOrderId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSettlementTransmissionDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetSettlementTransmissionDate(int clientOrderId, int jitSettlementOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSettlementTransmissionDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime> GetSettlementTransmissionDateAsync(int clientOrderId, int jitSettlementOption);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSettlementValueDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetSettlementValueDateResponse GetSettlementValueDate(GetSettlementValueDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSettlementValueDate", ReplyAction="*")]
        System.Threading.Tasks.Task<GetSettlementValueDateResponse> GetSettlementValueDateAsync(GetSettlementValueDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateOrderValueDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime ValidateOrderValueDate(int orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateOrderValueDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime> ValidateOrderValueDateAsync(int orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValueDatesForIntoHolding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetValueDatesForIntoHoldingResponse GetValueDatesForIntoHolding(GetValueDatesForIntoHoldingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetValueDatesForIntoHolding", ReplyAction="*")]
        System.Threading.Tasks.Task<GetValueDatesForIntoHoldingResponse> GetValueDatesForIntoHoldingAsync(GetValueDatesForIntoHoldingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetOrderValueDatesV2Response GetOrderValueDatesV2(GetOrderValueDatesV2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesV2", ReplyAction="*")]
        System.Threading.Tasks.Task<GetOrderValueDatesV2Response> GetOrderValueDatesV2Async(GetOrderValueDatesV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetOrderValueDatesResponse GetOrderValueDates(GetOrderValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetOrderValueDatesResponse> GetOrderValueDatesAsync(GetOrderValueDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesByAppV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetOrderValueDatesByAppV2Response GetOrderValueDatesByAppV2(GetOrderValueDatesByAppV2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesByAppV2", ReplyAction="*")]
        System.Threading.Tasks.Task<GetOrderValueDatesByAppV2Response> GetOrderValueDatesByAppV2Async(GetOrderValueDatesByAppV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesByApp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetOrderValueDatesByAppResponse GetOrderValueDatesByApp(GetOrderValueDatesByAppRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderValueDatesByApp", ReplyAction="*")]
        System.Threading.Tasks.Task<GetOrderValueDatesByAppResponse> GetOrderValueDatesByAppAsync(GetOrderValueDatesByAppRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetForwardOrderValueDatesV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetForwardOrderValueDatesV2Response GetForwardOrderValueDatesV2(GetForwardOrderValueDatesV2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetForwardOrderValueDatesV2", ReplyAction="*")]
        System.Threading.Tasks.Task<GetForwardOrderValueDatesV2Response> GetForwardOrderValueDatesV2Async(GetForwardOrderValueDatesV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetForwardOrderValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetForwardOrderValueDatesResponse GetForwardOrderValueDates(GetForwardOrderValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetForwardOrderValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetForwardOrderValueDatesResponse> GetForwardOrderValueDatesAsync(GetForwardOrderValueDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRolloverOrderValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetRolloverOrderValueDatesResponse GetRolloverOrderValueDates(GetRolloverOrderValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRolloverOrderValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetRolloverOrderValueDatesResponse> GetRolloverOrderValueDatesAsync(GetRolloverOrderValueDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNDFOrderValueDatesV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetNDFOrderValueDatesV2Response GetNDFOrderValueDatesV2(GetNDFOrderValueDatesV2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNDFOrderValueDatesV2", ReplyAction="*")]
        System.Threading.Tasks.Task<GetNDFOrderValueDatesV2Response> GetNDFOrderValueDatesV2Async(GetNDFOrderValueDatesV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNDFOrderValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetNDFOrderValueDatesResponse GetNDFOrderValueDates(GetNDFOrderValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNDFOrderValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetNDFOrderValueDatesResponse> GetNDFOrderValueDatesAsync(GetNDFOrderValueDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReleaseDateFromValueDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime[] GetReleaseDateFromValueDate(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime valueDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReleaseDateFromValueDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime[]> GetReleaseDateFromValueDateAsync(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime valueDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockInValueDatesV2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetLockInValueDatesV2Response GetLockInValueDatesV2(GetLockInValueDatesV2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockInValueDatesV2", ReplyAction="*")]
        System.Threading.Tasks.Task<GetLockInValueDatesV2Response> GetLockInValueDatesV2Async(GetLockInValueDatesV2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockInValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetLockInValueDatesResponse GetLockInValueDates(GetLockInValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLockInValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetLockInValueDatesResponse> GetLockInValueDatesAsync(GetLockInValueDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDisburseValueDates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GetDisburseValueDatesResponse GetDisburseValueDates(GetDisburseValueDatesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDisburseValueDates", ReplyAction="*")]
        System.Threading.Tasks.Task<GetDisburseValueDatesResponse> GetDisburseValueDatesAsync(GetDisburseValueDatesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPaymentValueDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPaymentValueDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int orderDetailId;
        
        public GetPaymentValueDateRequest() {
        }
        
        public GetPaymentValueDateRequest(int orderDetailId) {
            this.orderDetailId = orderDetailId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPaymentValueDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPaymentValueDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetPaymentValueDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime valueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime deadline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime cutoff;
        
        public GetPaymentValueDateResponse() {
        }
        
        public GetPaymentValueDateResponse(bool GetPaymentValueDateResult, System.DateTime valueDate, System.DateTime deadline, System.DateTime cutoff) {
            this.GetPaymentValueDateResult = GetPaymentValueDateResult;
            this.valueDate = valueDate;
            this.deadline = deadline;
            this.cutoff = cutoff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetValueDateFromReleaseDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetValueDateFromReleaseDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.DateTime releaseDate;
        
        public GetValueDateFromReleaseDateRequest() {
        }
        
        public GetValueDateFromReleaseDateRequest(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneCountryId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime releaseDate) {
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.itemTypeId = itemTypeId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.releaseDate = releaseDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetValueDateFromReleaseDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetValueDateFromReleaseDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetValueDateFromReleaseDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetValueDateFromReleaseDateResponse() {
        }
        
        public GetValueDateFromReleaseDateResponse(bool GetValueDateFromReleaseDateResult, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetValueDateFromReleaseDateResult = GetValueDateFromReleaseDateResult;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GeneratePaymentValueDateDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int orderDetailIdField;
        
        private System.DateTime valueDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int OrderDetailId {
            get {
                return this.orderDetailIdField;
            }
            set {
                this.orderDetailIdField = value;
                this.RaisePropertyChanged("OrderDetailId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime ValueDate {
            get {
                return this.valueDateField;
            }
            set {
                this.valueDateField = value;
                this.RaisePropertyChanged("ValueDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContributingItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int itemNoField;
        
        private int orderDetailIdField;
        
        private int clientOrderIdField;
        
        private int fundedByIdField;
        
        private string fundedByField;
        
        private System.Nullable<double> amountField;
        
        private System.Nullable<double> amountInScField;
        
        private double rateField;
        
        private double extensionField;
        
        private double extensionReportingField;
        
        private double extensionUsdField;
        
        private System.Nullable<int> relatedOrderDetailIdField;
        
        private System.DateTime initdtField;
        
        private int initidField;
        
        private System.DateTime upddtField;
        
        private int updidField;
        
        private int amountNDecField;
        
        private int rateNDecField;
        
        private System.Nullable<int> quoteIdField;
        
        private System.Nullable<int> itemRateIsPerField;
        
        private System.Nullable<int> rateMultiplierField;
        
        private System.Nullable<bool> preDeliveryField;
        
        private System.Nullable<double> forwardRateField;
        
        private System.Nullable<short> forwardRateIsPerField;
        
        private System.Nullable<int> forwardRateMultiplierField;
        
        private System.Nullable<int> forwardRateNDecField;
        
        private System.Nullable<double> forwardExtensionField;
        
        private bool isNewField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ItemNo {
            get {
                return this.itemNoField;
            }
            set {
                this.itemNoField = value;
                this.RaisePropertyChanged("ItemNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int OrderDetailId {
            get {
                return this.orderDetailIdField;
            }
            set {
                this.orderDetailIdField = value;
                this.RaisePropertyChanged("OrderDetailId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ClientOrderId {
            get {
                return this.clientOrderIdField;
            }
            set {
                this.clientOrderIdField = value;
                this.RaisePropertyChanged("ClientOrderId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int FundedById {
            get {
                return this.fundedByIdField;
            }
            set {
                this.fundedByIdField = value;
                this.RaisePropertyChanged("FundedById");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FundedBy {
            get {
                return this.fundedByField;
            }
            set {
                this.fundedByField = value;
                this.RaisePropertyChanged("FundedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<double> Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<double> AmountInSc {
            get {
                return this.amountInScField;
            }
            set {
                this.amountInScField = value;
                this.RaisePropertyChanged("AmountInSc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
                this.RaisePropertyChanged("Extension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double ExtensionReporting {
            get {
                return this.extensionReportingField;
            }
            set {
                this.extensionReportingField = value;
                this.RaisePropertyChanged("ExtensionReporting");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double ExtensionUsd {
            get {
                return this.extensionUsdField;
            }
            set {
                this.extensionUsdField = value;
                this.RaisePropertyChanged("ExtensionUsd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public System.Nullable<int> RelatedOrderDetailId {
            get {
                return this.relatedOrderDetailIdField;
            }
            set {
                this.relatedOrderDetailIdField = value;
                this.RaisePropertyChanged("RelatedOrderDetailId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime Initdt {
            get {
                return this.initdtField;
            }
            set {
                this.initdtField = value;
                this.RaisePropertyChanged("Initdt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int Initid {
            get {
                return this.initidField;
            }
            set {
                this.initidField = value;
                this.RaisePropertyChanged("Initid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public System.DateTime Upddt {
            get {
                return this.upddtField;
            }
            set {
                this.upddtField = value;
                this.RaisePropertyChanged("Upddt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public int Updid {
            get {
                return this.updidField;
            }
            set {
                this.updidField = value;
                this.RaisePropertyChanged("Updid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public int AmountNDec {
            get {
                return this.amountNDecField;
            }
            set {
                this.amountNDecField = value;
                this.RaisePropertyChanged("AmountNDec");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public int RateNDec {
            get {
                return this.rateNDecField;
            }
            set {
                this.rateNDecField = value;
                this.RaisePropertyChanged("RateNDec");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=18)]
        public System.Nullable<int> QuoteId {
            get {
                return this.quoteIdField;
            }
            set {
                this.quoteIdField = value;
                this.RaisePropertyChanged("QuoteId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=19)]
        public System.Nullable<int> ItemRateIsPer {
            get {
                return this.itemRateIsPerField;
            }
            set {
                this.itemRateIsPerField = value;
                this.RaisePropertyChanged("ItemRateIsPer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=20)]
        public System.Nullable<int> RateMultiplier {
            get {
                return this.rateMultiplierField;
            }
            set {
                this.rateMultiplierField = value;
                this.RaisePropertyChanged("RateMultiplier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=21)]
        public System.Nullable<bool> PreDelivery {
            get {
                return this.preDeliveryField;
            }
            set {
                this.preDeliveryField = value;
                this.RaisePropertyChanged("PreDelivery");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=22)]
        public System.Nullable<double> ForwardRate {
            get {
                return this.forwardRateField;
            }
            set {
                this.forwardRateField = value;
                this.RaisePropertyChanged("ForwardRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=23)]
        public System.Nullable<short> ForwardRateIsPer {
            get {
                return this.forwardRateIsPerField;
            }
            set {
                this.forwardRateIsPerField = value;
                this.RaisePropertyChanged("ForwardRateIsPer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=24)]
        public System.Nullable<int> ForwardRateMultiplier {
            get {
                return this.forwardRateMultiplierField;
            }
            set {
                this.forwardRateMultiplierField = value;
                this.RaisePropertyChanged("ForwardRateMultiplier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=25)]
        public System.Nullable<int> ForwardRateNDec {
            get {
                return this.forwardRateNDecField;
            }
            set {
                this.forwardRateNDecField = value;
                this.RaisePropertyChanged("ForwardRateNDec");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=26)]
        public System.Nullable<double> ForwardExtension {
            get {
                return this.forwardExtensionField;
            }
            set {
                this.forwardExtensionField = value;
                this.RaisePropertyChanged("ForwardExtension");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
                this.RaisePropertyChanged("IsNew");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettlementValueDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSettlementValueDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int essLogId;
        
        public GetSettlementValueDateRequest() {
        }
        
        public GetSettlementValueDateRequest(int essLogId) {
            this.essLogId = essLogId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettlementValueDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSettlementValueDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetSettlementValueDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime valueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime deadline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime cutoff;
        
        public GetSettlementValueDateResponse() {
        }
        
        public GetSettlementValueDateResponse(bool GetSettlementValueDateResult, System.DateTime valueDate, System.DateTime deadline, System.DateTime cutoff) {
            this.GetSettlementValueDateResult = GetSettlementValueDateResult;
            this.valueDate = valueDate;
            this.deadline = deadline;
            this.cutoff = cutoff;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetValueDatesForIntoHolding", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetValueDatesForIntoHoldingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ContributingItem[] contributingItems;
        
        public GetValueDatesForIntoHoldingRequest() {
        }
        
        public GetValueDatesForIntoHoldingRequest(int clientId, string targetCurrencyCode, string settlementCurrencyCode, int paymentMethodId, int fundedBy, ContributingItem[] contributingItems) {
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.paymentMethodId = paymentMethodId;
            this.fundedBy = fundedBy;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetValueDatesForIntoHoldingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetValueDatesForIntoHoldingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetValueDatesForIntoHoldingResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetValueDatesForIntoHoldingResponse() {
        }
        
        public GetValueDatesForIntoHoldingResponse(bool GetValueDatesForIntoHoldingResult, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetValueDatesForIntoHoldingResult = GetValueDatesForIntoHoldingResult;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int orderDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public ContributingItem[] contributingItems;
        
        public GetOrderValueDatesV2Request() {
        }
        
        public GetOrderValueDatesV2Request(int orderDetailId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, int itemTypeId, int paymentMethodId, int beneId, int beneCountryId, int beneBankCountryId, int fundedBy, string beneBankSwiftAddress, ContributingItem[] contributingItems) {
            this.orderDetailId = orderDetailId;
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.itemTypeId = itemTypeId;
            this.paymentMethodId = paymentMethodId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.fundedBy = fundedBy;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetOrderValueDatesV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetOrderValueDatesV2Response() {
        }
        
        public GetOrderValueDatesV2Response(bool GetOrderValueDatesV2Result, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetOrderValueDatesV2Result = GetOrderValueDatesV2Result;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int orderDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public ContributingItem[] contributingItems;
        
        public GetOrderValueDatesRequest() {
        }
        
        public GetOrderValueDatesRequest(int orderDetailId, int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int paymentMethodId, int beneId, int beneCountryId, int beneBankCountryId, int fundedBy, string beneBankSwiftAddress, ContributingItem[] contributingItems) {
            this.orderDetailId = orderDetailId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.itemTypeId = itemTypeId;
            this.paymentMethodId = paymentMethodId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.fundedBy = fundedBy;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetOrderValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetOrderValueDatesResponse() {
        }
        
        public GetOrderValueDatesResponse(bool GetOrderValueDatesResult, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetOrderValueDatesResult = GetOrderValueDatesResult;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesByAppV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesByAppV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int orderDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public ContributingItem[] contributingItems;
        
        public GetOrderValueDatesByAppV2Request() {
        }
        
        public GetOrderValueDatesByAppV2Request(int applicationId, int orderDetailId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, int itemTypeId, int paymentMethodId, int beneId, int beneCountryId, int beneBankCountryId, int fundedBy, string beneBankSwiftAddress, ContributingItem[] contributingItems) {
            this.applicationId = applicationId;
            this.orderDetailId = orderDetailId;
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.itemTypeId = itemTypeId;
            this.paymentMethodId = paymentMethodId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.fundedBy = fundedBy;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesByAppV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesByAppV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetOrderValueDatesByAppV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetOrderValueDatesByAppV2Response() {
        }
        
        public GetOrderValueDatesByAppV2Response(bool GetOrderValueDatesByAppV2Result, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetOrderValueDatesByAppV2Result = GetOrderValueDatesByAppV2Result;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesByApp", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesByAppRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int orderDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public ContributingItem[] contributingItems;
        
        public GetOrderValueDatesByAppRequest() {
        }
        
        public GetOrderValueDatesByAppRequest(int applicationId, int orderDetailId, int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int paymentMethodId, int beneId, int beneCountryId, int beneBankCountryId, int fundedBy, string beneBankSwiftAddress, ContributingItem[] contributingItems) {
            this.applicationId = applicationId;
            this.orderDetailId = orderDetailId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.itemTypeId = itemTypeId;
            this.paymentMethodId = paymentMethodId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.fundedBy = fundedBy;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderValueDatesByAppResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetOrderValueDatesByAppResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetOrderValueDatesByAppResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetOrderValueDatesByAppResponse() {
        }
        
        public GetOrderValueDatesByAppResponse(bool GetOrderValueDatesByAppResult, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetOrderValueDatesByAppResult = GetOrderValueDatesByAppResult;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForwardOrderValueDatesV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForwardOrderValueDatesV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> forwardStartDate;
        
        public GetForwardOrderValueDatesV2Request() {
        }
        
        public GetForwardOrderValueDatesV2Request(int applicationId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, System.Nullable<System.DateTime> forwardStartDate) {
            this.applicationId = applicationId;
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.forwardStartDate = forwardStartDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForwardOrderValueDatesV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForwardOrderValueDatesV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetForwardOrderValueDatesV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime minimumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime maximumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.DateTime[] blackoutDates;
        
        public GetForwardOrderValueDatesV2Response() {
        }
        
        public GetForwardOrderValueDatesV2Response(bool GetForwardOrderValueDatesV2Result, System.DateTime minimumForwardStartDate, System.DateTime defaultForwardDate, System.DateTime maximumForwardStartDate, System.DateTime minimumForwardEndDate, System.DateTime maximumForwardEndDate, System.DateTime[] blackoutDates) {
            this.GetForwardOrderValueDatesV2Result = GetForwardOrderValueDatesV2Result;
            this.minimumForwardStartDate = minimumForwardStartDate;
            this.defaultForwardDate = defaultForwardDate;
            this.maximumForwardStartDate = maximumForwardStartDate;
            this.minimumForwardEndDate = minimumForwardEndDate;
            this.maximumForwardEndDate = maximumForwardEndDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForwardOrderValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForwardOrderValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> forwardStartDate;
        
        public GetForwardOrderValueDatesRequest() {
        }
        
        public GetForwardOrderValueDatesRequest(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.Nullable<System.DateTime> forwardStartDate) {
            this.applicationId = applicationId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.forwardStartDate = forwardStartDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetForwardOrderValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetForwardOrderValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetForwardOrderValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime minimumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime maximumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.DateTime[] blackoutDates;
        
        public GetForwardOrderValueDatesResponse() {
        }
        
        public GetForwardOrderValueDatesResponse(bool GetForwardOrderValueDatesResult, System.DateTime minimumForwardStartDate, System.DateTime defaultForwardDate, System.DateTime maximumForwardStartDate, System.DateTime minimumForwardEndDate, System.DateTime maximumForwardEndDate, System.DateTime[] blackoutDates) {
            this.GetForwardOrderValueDatesResult = GetForwardOrderValueDatesResult;
            this.minimumForwardStartDate = minimumForwardStartDate;
            this.defaultForwardDate = defaultForwardDate;
            this.maximumForwardStartDate = maximumForwardStartDate;
            this.minimumForwardEndDate = minimumForwardEndDate;
            this.maximumForwardEndDate = maximumForwardEndDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRolloverOrderValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRolloverOrderValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime originalForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> forwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public bool isMarketRateRollover;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public System.DateTime originalForwardBookingDate;
        
        public GetRolloverOrderValueDatesRequest() {
        }
        
        public GetRolloverOrderValueDatesRequest(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.DateTime originalForwardEndDate, System.Nullable<System.DateTime> forwardStartDate, bool isMarketRateRollover, System.DateTime originalForwardBookingDate) {
            this.applicationId = applicationId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.originalForwardEndDate = originalForwardEndDate;
            this.forwardStartDate = forwardStartDate;
            this.isMarketRateRollover = isMarketRateRollover;
            this.originalForwardBookingDate = originalForwardBookingDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRolloverOrderValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetRolloverOrderValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetRolloverOrderValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumForwardStartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime minimumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime maximumForwardEndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.DateTime[] blackoutDates;
        
        public GetRolloverOrderValueDatesResponse() {
        }
        
        public GetRolloverOrderValueDatesResponse(bool GetRolloverOrderValueDatesResult, System.DateTime minimumForwardStartDate, System.DateTime defaultForwardDate, System.DateTime maximumForwardStartDate, System.DateTime minimumForwardEndDate, System.DateTime maximumForwardEndDate, System.DateTime[] blackoutDates) {
            this.GetRolloverOrderValueDatesResult = GetRolloverOrderValueDatesResult;
            this.minimumForwardStartDate = minimumForwardStartDate;
            this.defaultForwardDate = defaultForwardDate;
            this.maximumForwardStartDate = maximumForwardStartDate;
            this.minimumForwardEndDate = minimumForwardEndDate;
            this.maximumForwardEndDate = maximumForwardEndDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNDFOrderValueDatesV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNDFOrderValueDatesV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> forwardDate;
        
        public GetNDFOrderValueDatesV2Request() {
        }
        
        public GetNDFOrderValueDatesV2Request(int applicationId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, System.Nullable<System.DateTime> forwardDate) {
            this.applicationId = applicationId;
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.forwardDate = forwardDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNDFOrderValueDatesV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNDFOrderValueDatesV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetNDFOrderValueDatesV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime minimumFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime defaultFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.DateTime maximumFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public System.DateTime[] blackoutDates;
        
        public GetNDFOrderValueDatesV2Response() {
        }
        
        public GetNDFOrderValueDatesV2Response(bool GetNDFOrderValueDatesV2Result, System.DateTime minimumForwardDate, System.DateTime defaultForwardDate, System.DateTime maximumForwardDate, System.DateTime minimumFixingDate, System.DateTime defaultFixingDate, System.DateTime maximumFixingDate, System.DateTime[] blackoutDates) {
            this.GetNDFOrderValueDatesV2Result = GetNDFOrderValueDatesV2Result;
            this.minimumForwardDate = minimumForwardDate;
            this.defaultForwardDate = defaultForwardDate;
            this.maximumForwardDate = maximumForwardDate;
            this.minimumFixingDate = minimumFixingDate;
            this.defaultFixingDate = defaultFixingDate;
            this.maximumFixingDate = maximumFixingDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNDFOrderValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNDFOrderValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int applicationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> forwardDate;
        
        public GetNDFOrderValueDatesRequest() {
        }
        
        public GetNDFOrderValueDatesRequest(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.Nullable<System.DateTime> forwardDate) {
            this.applicationId = applicationId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.forwardDate = forwardDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNDFOrderValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetNDFOrderValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetNDFOrderValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumForwardDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime minimumFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime defaultFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.DateTime maximumFixingDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public System.DateTime[] blackoutDates;
        
        public GetNDFOrderValueDatesResponse() {
        }
        
        public GetNDFOrderValueDatesResponse(bool GetNDFOrderValueDatesResult, System.DateTime minimumForwardDate, System.DateTime defaultForwardDate, System.DateTime maximumForwardDate, System.DateTime minimumFixingDate, System.DateTime defaultFixingDate, System.DateTime maximumFixingDate, System.DateTime[] blackoutDates) {
            this.GetNDFOrderValueDatesResult = GetNDFOrderValueDatesResult;
            this.minimumForwardDate = minimumForwardDate;
            this.defaultForwardDate = defaultForwardDate;
            this.maximumForwardDate = maximumForwardDate;
            this.minimumFixingDate = minimumFixingDate;
            this.defaultFixingDate = defaultFixingDate;
            this.maximumFixingDate = maximumFixingDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLockInValueDatesV2", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLockInValueDatesV2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string targetCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string settlementCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime orderDate;
        
        public GetLockInValueDatesV2Request() {
        }
        
        public GetLockInValueDatesV2Request(int clientId, string targetCurrencyCode, string settlementCurrencyCode, int itemTypeId, System.DateTime orderDate) {
            this.clientId = clientId;
            this.targetCurrencyCode = targetCurrencyCode;
            this.settlementCurrencyCode = settlementCurrencyCode;
            this.itemTypeId = itemTypeId;
            this.orderDate = orderDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLockInValueDatesV2Response", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLockInValueDatesV2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLockInValueDatesV2Result;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime orderDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime minValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime maxValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime[] blackoutDates;
        
        public GetLockInValueDatesV2Response() {
        }
        
        public GetLockInValueDatesV2Response(bool GetLockInValueDatesV2Result, System.DateTime orderDate, System.DateTime minValueDate, System.DateTime defaultValueDate, System.DateTime maxValueDate, System.DateTime[] blackoutDates) {
            this.GetLockInValueDatesV2Result = GetLockInValueDatesV2Result;
            this.orderDate = orderDate;
            this.minValueDate = minValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maxValueDate = maxValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLockInValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLockInValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int currencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime orderDate;
        
        public GetLockInValueDatesRequest() {
        }
        
        public GetLockInValueDatesRequest(int clientId, int currencyId, int settlementCurrencyId, int itemTypeId, System.DateTime orderDate) {
            this.clientId = clientId;
            this.currencyId = currencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.itemTypeId = itemTypeId;
            this.orderDate = orderDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLockInValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLockInValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLockInValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime orderDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime minValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime maxValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime[] blackoutDates;
        
        public GetLockInValueDatesResponse() {
        }
        
        public GetLockInValueDatesResponse(bool GetLockInValueDatesResult, System.DateTime orderDate, System.DateTime minValueDate, System.DateTime defaultValueDate, System.DateTime maxValueDate, System.DateTime[] blackoutDates) {
            this.GetLockInValueDatesResult = GetLockInValueDatesResult;
            this.orderDate = orderDate;
            this.minValueDate = minValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maxValueDate = maxValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDisburseValueDates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDisburseValueDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int clientOrderId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int orderDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int clientId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int targetCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int settlementCurrencyId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int itemTypeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int paymentMethodId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int beneId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int beneCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public int beneBankCountryId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public int fundedBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string beneBankSwiftAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public System.DateTime orderDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public ContributingItem[] contributingItems;
        
        public GetDisburseValueDatesRequest() {
        }
        
        public GetDisburseValueDatesRequest(int userId, int clientOrderId, int orderDetailId, int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int paymentMethodId, int beneId, int beneCountryId, int beneBankCountryId, int fundedBy, string beneBankSwiftAddress, System.DateTime orderDate, ContributingItem[] contributingItems) {
            this.userId = userId;
            this.clientOrderId = clientOrderId;
            this.orderDetailId = orderDetailId;
            this.clientId = clientId;
            this.targetCurrencyId = targetCurrencyId;
            this.settlementCurrencyId = settlementCurrencyId;
            this.itemTypeId = itemTypeId;
            this.paymentMethodId = paymentMethodId;
            this.beneId = beneId;
            this.beneCountryId = beneCountryId;
            this.beneBankCountryId = beneBankCountryId;
            this.fundedBy = fundedBy;
            this.beneBankSwiftAddress = beneBankSwiftAddress;
            this.orderDate = orderDate;
            this.contributingItems = contributingItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDisburseValueDatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDisburseValueDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetDisburseValueDatesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime minimumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime defaultValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime maximumValueDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime[] blackoutDates;
        
        public GetDisburseValueDatesResponse() {
        }
        
        public GetDisburseValueDatesResponse(bool GetDisburseValueDatesResult, System.DateTime minimumValueDate, System.DateTime defaultValueDate, System.DateTime maximumValueDate, System.DateTime[] blackoutDates) {
            this.GetDisburseValueDatesResult = GetDisburseValueDatesResult;
            this.minimumValueDate = minimumValueDate;
            this.defaultValueDate = defaultValueDate;
            this.maximumValueDate = maximumValueDate;
            this.blackoutDates = blackoutDates;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ValueDateServiceSoapChannel : ValueDateServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValueDateServiceSoapClient : System.ServiceModel.ClientBase<ValueDateServiceSoap>, ValueDateServiceSoap {
        
        public ValueDateServiceSoapClient() {
        }
        
        public ValueDateServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ValueDateServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValueDateServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValueDateServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetPaymentValueDateResponse ValueDateServiceSoap.GetPaymentValueDate(GetPaymentValueDateRequest request) {
            return base.Channel.GetPaymentValueDate(request);
        }
        
        public bool GetPaymentValueDate(int orderDetailId, out System.DateTime valueDate, out System.DateTime deadline, out System.DateTime cutoff) {
            GetPaymentValueDateRequest inValue = new GetPaymentValueDateRequest();
            inValue.orderDetailId = orderDetailId;
            GetPaymentValueDateResponse retVal = ((ValueDateServiceSoap)(this)).GetPaymentValueDate(inValue);
            valueDate = retVal.valueDate;
            deadline = retVal.deadline;
            cutoff = retVal.cutoff;
            return retVal.GetPaymentValueDateResult;
        }
        
        public System.Threading.Tasks.Task<GetPaymentValueDateResponse> GetPaymentValueDateAsync(GetPaymentValueDateRequest request) {
            return base.Channel.GetPaymentValueDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetValueDateFromReleaseDateResponse ValueDateServiceSoap.GetValueDateFromReleaseDate(GetValueDateFromReleaseDateRequest request) {
            return base.Channel.GetValueDateFromReleaseDate(request);
        }
        
        public bool GetValueDateFromReleaseDate(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneCountryId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime releaseDate, out System.DateTime minimumValueDate, out System.DateTime defaultValueDate, out System.DateTime maximumValueDate, out System.DateTime[] blackoutDates) {
            GetValueDateFromReleaseDateRequest inValue = new GetValueDateFromReleaseDateRequest();
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.itemTypeId = itemTypeId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.releaseDate = releaseDate;
            GetValueDateFromReleaseDateResponse retVal = ((ValueDateServiceSoap)(this)).GetValueDateFromReleaseDate(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetValueDateFromReleaseDateResult;
        }
        
        public System.Threading.Tasks.Task<GetValueDateFromReleaseDateResponse> GetValueDateFromReleaseDateAsync(GetValueDateFromReleaseDateRequest request) {
            return base.Channel.GetValueDateFromReleaseDateAsync(request);
        }
        
        public System.DateTime GetPaymentMinimumValueDate(int orderDetailId) {
            return base.Channel.GetPaymentMinimumValueDate(orderDetailId);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetPaymentMinimumValueDateAsync(int orderDetailId) {
            return base.Channel.GetPaymentMinimumValueDateAsync(orderDetailId);
        }
        
        public GeneratePaymentValueDateDetails[] GetGeneratePaymentValueDates(int clientOrderId, int userId) {
            return base.Channel.GetGeneratePaymentValueDates(clientOrderId, userId);
        }
        
        public System.Threading.Tasks.Task<GeneratePaymentValueDateDetails[]> GetGeneratePaymentValueDatesAsync(int clientOrderId, int userId) {
            return base.Channel.GetGeneratePaymentValueDatesAsync(clientOrderId, userId);
        }
        
        public int GeneratePaymentValueDates(int clientOrderId, int userId) {
            return base.Channel.GeneratePaymentValueDates(clientOrderId, userId);
        }
        
        public System.Threading.Tasks.Task<int> GeneratePaymentValueDatesAsync(int clientOrderId, int userId) {
            return base.Channel.GeneratePaymentValueDatesAsync(clientOrderId, userId);
        }
        
        public System.DateTime GetSettlementTransmissionDate(int clientOrderId, int jitSettlementOption) {
            return base.Channel.GetSettlementTransmissionDate(clientOrderId, jitSettlementOption);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetSettlementTransmissionDateAsync(int clientOrderId, int jitSettlementOption) {
            return base.Channel.GetSettlementTransmissionDateAsync(clientOrderId, jitSettlementOption);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetSettlementValueDateResponse ValueDateServiceSoap.GetSettlementValueDate(GetSettlementValueDateRequest request) {
            return base.Channel.GetSettlementValueDate(request);
        }
        
        public bool GetSettlementValueDate(int essLogId, out System.DateTime valueDate, out System.DateTime deadline, out System.DateTime cutoff) {
            GetSettlementValueDateRequest inValue = new GetSettlementValueDateRequest();
            inValue.essLogId = essLogId;
            GetSettlementValueDateResponse retVal = ((ValueDateServiceSoap)(this)).GetSettlementValueDate(inValue);
            valueDate = retVal.valueDate;
            deadline = retVal.deadline;
            cutoff = retVal.cutoff;
            return retVal.GetSettlementValueDateResult;
        }
        
        public System.Threading.Tasks.Task<GetSettlementValueDateResponse> GetSettlementValueDateAsync(GetSettlementValueDateRequest request) {
            return base.Channel.GetSettlementValueDateAsync(request);
        }
        
        public System.DateTime ValidateOrderValueDate(int orderDetailId) {
            return base.Channel.ValidateOrderValueDate(orderDetailId);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> ValidateOrderValueDateAsync(int orderDetailId) {
            return base.Channel.ValidateOrderValueDateAsync(orderDetailId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetValueDatesForIntoHoldingResponse ValueDateServiceSoap.GetValueDatesForIntoHolding(GetValueDatesForIntoHoldingRequest request) {
            return base.Channel.GetValueDatesForIntoHolding(request);
        }
        
        public bool GetValueDatesForIntoHolding(int clientId, string targetCurrencyCode, string settlementCurrencyCode, int paymentMethodId, int fundedBy, ContributingItem[] contributingItems, out System.DateTime minimumValueDate, out System.DateTime defaultValueDate, out System.DateTime maximumValueDate, out System.DateTime[] blackoutDates) {
            GetValueDatesForIntoHoldingRequest inValue = new GetValueDatesForIntoHoldingRequest();
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.paymentMethodId = paymentMethodId;
            inValue.fundedBy = fundedBy;
            inValue.contributingItems = contributingItems;
            GetValueDatesForIntoHoldingResponse retVal = ((ValueDateServiceSoap)(this)).GetValueDatesForIntoHolding(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetValueDatesForIntoHoldingResult;
        }
        
        public System.Threading.Tasks.Task<GetValueDatesForIntoHoldingResponse> GetValueDatesForIntoHoldingAsync(GetValueDatesForIntoHoldingRequest request) {
            return base.Channel.GetValueDatesForIntoHoldingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetOrderValueDatesV2Response ValueDateServiceSoap.GetOrderValueDatesV2(GetOrderValueDatesV2Request request) {
            return base.Channel.GetOrderValueDatesV2(request);
        }
        
        public bool GetOrderValueDatesV2(
                    int orderDetailId, 
                    int clientId, 
                    string targetCurrencyCode, 
                    string settlementCurrencyCode, 
                    int itemTypeId, 
                    int paymentMethodId, 
                    int beneId, 
                    int beneCountryId, 
                    int beneBankCountryId, 
                    int fundedBy, 
                    string beneBankSwiftAddress, 
                    ContributingItem[] contributingItems, 
                    out System.DateTime minimumValueDate, 
                    out System.DateTime defaultValueDate, 
                    out System.DateTime maximumValueDate, 
                    out System.DateTime[] blackoutDates) {
            GetOrderValueDatesV2Request inValue = new GetOrderValueDatesV2Request();
            inValue.orderDetailId = orderDetailId;
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.itemTypeId = itemTypeId;
            inValue.paymentMethodId = paymentMethodId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.fundedBy = fundedBy;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.contributingItems = contributingItems;
            GetOrderValueDatesV2Response retVal = ((ValueDateServiceSoap)(this)).GetOrderValueDatesV2(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetOrderValueDatesV2Result;
        }
        
        public System.Threading.Tasks.Task<GetOrderValueDatesV2Response> GetOrderValueDatesV2Async(GetOrderValueDatesV2Request request) {
            return base.Channel.GetOrderValueDatesV2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetOrderValueDatesResponse ValueDateServiceSoap.GetOrderValueDates(GetOrderValueDatesRequest request) {
            return base.Channel.GetOrderValueDates(request);
        }
        
        public bool GetOrderValueDates(
                    int orderDetailId, 
                    int clientId, 
                    int targetCurrencyId, 
                    int settlementCurrencyId, 
                    int itemTypeId, 
                    int paymentMethodId, 
                    int beneId, 
                    int beneCountryId, 
                    int beneBankCountryId, 
                    int fundedBy, 
                    string beneBankSwiftAddress, 
                    ContributingItem[] contributingItems, 
                    out System.DateTime minimumValueDate, 
                    out System.DateTime defaultValueDate, 
                    out System.DateTime maximumValueDate, 
                    out System.DateTime[] blackoutDates) {
            GetOrderValueDatesRequest inValue = new GetOrderValueDatesRequest();
            inValue.orderDetailId = orderDetailId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.itemTypeId = itemTypeId;
            inValue.paymentMethodId = paymentMethodId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.fundedBy = fundedBy;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.contributingItems = contributingItems;
            GetOrderValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetOrderValueDates(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetOrderValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetOrderValueDatesResponse> GetOrderValueDatesAsync(GetOrderValueDatesRequest request) {
            return base.Channel.GetOrderValueDatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetOrderValueDatesByAppV2Response ValueDateServiceSoap.GetOrderValueDatesByAppV2(GetOrderValueDatesByAppV2Request request) {
            return base.Channel.GetOrderValueDatesByAppV2(request);
        }
        
        public bool GetOrderValueDatesByAppV2(
                    int applicationId, 
                    int orderDetailId, 
                    int clientId, 
                    string targetCurrencyCode, 
                    string settlementCurrencyCode, 
                    int itemTypeId, 
                    int paymentMethodId, 
                    int beneId, 
                    int beneCountryId, 
                    int beneBankCountryId, 
                    int fundedBy, 
                    string beneBankSwiftAddress, 
                    ContributingItem[] contributingItems, 
                    out System.DateTime minimumValueDate, 
                    out System.DateTime defaultValueDate, 
                    out System.DateTime maximumValueDate, 
                    out System.DateTime[] blackoutDates) {
            GetOrderValueDatesByAppV2Request inValue = new GetOrderValueDatesByAppV2Request();
            inValue.applicationId = applicationId;
            inValue.orderDetailId = orderDetailId;
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.itemTypeId = itemTypeId;
            inValue.paymentMethodId = paymentMethodId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.fundedBy = fundedBy;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.contributingItems = contributingItems;
            GetOrderValueDatesByAppV2Response retVal = ((ValueDateServiceSoap)(this)).GetOrderValueDatesByAppV2(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetOrderValueDatesByAppV2Result;
        }
        
        public System.Threading.Tasks.Task<GetOrderValueDatesByAppV2Response> GetOrderValueDatesByAppV2Async(GetOrderValueDatesByAppV2Request request) {
            return base.Channel.GetOrderValueDatesByAppV2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetOrderValueDatesByAppResponse ValueDateServiceSoap.GetOrderValueDatesByApp(GetOrderValueDatesByAppRequest request) {
            return base.Channel.GetOrderValueDatesByApp(request);
        }
        
        public bool GetOrderValueDatesByApp(
                    int applicationId, 
                    int orderDetailId, 
                    int clientId, 
                    int targetCurrencyId, 
                    int settlementCurrencyId, 
                    int itemTypeId, 
                    int paymentMethodId, 
                    int beneId, 
                    int beneCountryId, 
                    int beneBankCountryId, 
                    int fundedBy, 
                    string beneBankSwiftAddress, 
                    ContributingItem[] contributingItems, 
                    out System.DateTime minimumValueDate, 
                    out System.DateTime defaultValueDate, 
                    out System.DateTime maximumValueDate, 
                    out System.DateTime[] blackoutDates) {
            GetOrderValueDatesByAppRequest inValue = new GetOrderValueDatesByAppRequest();
            inValue.applicationId = applicationId;
            inValue.orderDetailId = orderDetailId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.itemTypeId = itemTypeId;
            inValue.paymentMethodId = paymentMethodId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.fundedBy = fundedBy;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.contributingItems = contributingItems;
            GetOrderValueDatesByAppResponse retVal = ((ValueDateServiceSoap)(this)).GetOrderValueDatesByApp(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetOrderValueDatesByAppResult;
        }
        
        public System.Threading.Tasks.Task<GetOrderValueDatesByAppResponse> GetOrderValueDatesByAppAsync(GetOrderValueDatesByAppRequest request) {
            return base.Channel.GetOrderValueDatesByAppAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetForwardOrderValueDatesV2Response ValueDateServiceSoap.GetForwardOrderValueDatesV2(GetForwardOrderValueDatesV2Request request) {
            return base.Channel.GetForwardOrderValueDatesV2(request);
        }
        
        public bool GetForwardOrderValueDatesV2(int applicationId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, System.Nullable<System.DateTime> forwardStartDate, out System.DateTime minimumForwardStartDate, out System.DateTime defaultForwardDate, out System.DateTime maximumForwardStartDate, out System.DateTime minimumForwardEndDate, out System.DateTime maximumForwardEndDate, out System.DateTime[] blackoutDates) {
            GetForwardOrderValueDatesV2Request inValue = new GetForwardOrderValueDatesV2Request();
            inValue.applicationId = applicationId;
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.forwardStartDate = forwardStartDate;
            GetForwardOrderValueDatesV2Response retVal = ((ValueDateServiceSoap)(this)).GetForwardOrderValueDatesV2(inValue);
            minimumForwardStartDate = retVal.minimumForwardStartDate;
            defaultForwardDate = retVal.defaultForwardDate;
            maximumForwardStartDate = retVal.maximumForwardStartDate;
            minimumForwardEndDate = retVal.minimumForwardEndDate;
            maximumForwardEndDate = retVal.maximumForwardEndDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetForwardOrderValueDatesV2Result;
        }
        
        public System.Threading.Tasks.Task<GetForwardOrderValueDatesV2Response> GetForwardOrderValueDatesV2Async(GetForwardOrderValueDatesV2Request request) {
            return base.Channel.GetForwardOrderValueDatesV2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetForwardOrderValueDatesResponse ValueDateServiceSoap.GetForwardOrderValueDates(GetForwardOrderValueDatesRequest request) {
            return base.Channel.GetForwardOrderValueDates(request);
        }
        
        public bool GetForwardOrderValueDates(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.Nullable<System.DateTime> forwardStartDate, out System.DateTime minimumForwardStartDate, out System.DateTime defaultForwardDate, out System.DateTime maximumForwardStartDate, out System.DateTime minimumForwardEndDate, out System.DateTime maximumForwardEndDate, out System.DateTime[] blackoutDates) {
            GetForwardOrderValueDatesRequest inValue = new GetForwardOrderValueDatesRequest();
            inValue.applicationId = applicationId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.forwardStartDate = forwardStartDate;
            GetForwardOrderValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetForwardOrderValueDates(inValue);
            minimumForwardStartDate = retVal.minimumForwardStartDate;
            defaultForwardDate = retVal.defaultForwardDate;
            maximumForwardStartDate = retVal.maximumForwardStartDate;
            minimumForwardEndDate = retVal.minimumForwardEndDate;
            maximumForwardEndDate = retVal.maximumForwardEndDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetForwardOrderValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetForwardOrderValueDatesResponse> GetForwardOrderValueDatesAsync(GetForwardOrderValueDatesRequest request) {
            return base.Channel.GetForwardOrderValueDatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetRolloverOrderValueDatesResponse ValueDateServiceSoap.GetRolloverOrderValueDates(GetRolloverOrderValueDatesRequest request) {
            return base.Channel.GetRolloverOrderValueDates(request);
        }
        
        public bool GetRolloverOrderValueDates(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.DateTime originalForwardEndDate, System.Nullable<System.DateTime> forwardStartDate, bool isMarketRateRollover, System.DateTime originalForwardBookingDate, out System.DateTime minimumForwardStartDate, out System.DateTime defaultForwardDate, out System.DateTime maximumForwardStartDate, out System.DateTime minimumForwardEndDate, out System.DateTime maximumForwardEndDate, out System.DateTime[] blackoutDates) {
            GetRolloverOrderValueDatesRequest inValue = new GetRolloverOrderValueDatesRequest();
            inValue.applicationId = applicationId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.originalForwardEndDate = originalForwardEndDate;
            inValue.forwardStartDate = forwardStartDate;
            inValue.isMarketRateRollover = isMarketRateRollover;
            inValue.originalForwardBookingDate = originalForwardBookingDate;
            GetRolloverOrderValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetRolloverOrderValueDates(inValue);
            minimumForwardStartDate = retVal.minimumForwardStartDate;
            defaultForwardDate = retVal.defaultForwardDate;
            maximumForwardStartDate = retVal.maximumForwardStartDate;
            minimumForwardEndDate = retVal.minimumForwardEndDate;
            maximumForwardEndDate = retVal.maximumForwardEndDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetRolloverOrderValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetRolloverOrderValueDatesResponse> GetRolloverOrderValueDatesAsync(GetRolloverOrderValueDatesRequest request) {
            return base.Channel.GetRolloverOrderValueDatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetNDFOrderValueDatesV2Response ValueDateServiceSoap.GetNDFOrderValueDatesV2(GetNDFOrderValueDatesV2Request request) {
            return base.Channel.GetNDFOrderValueDatesV2(request);
        }
        
        public bool GetNDFOrderValueDatesV2(int applicationId, int clientId, string targetCurrencyCode, string settlementCurrencyCode, System.Nullable<System.DateTime> forwardDate, out System.DateTime minimumForwardDate, out System.DateTime defaultForwardDate, out System.DateTime maximumForwardDate, out System.DateTime minimumFixingDate, out System.DateTime defaultFixingDate, out System.DateTime maximumFixingDate, out System.DateTime[] blackoutDates) {
            GetNDFOrderValueDatesV2Request inValue = new GetNDFOrderValueDatesV2Request();
            inValue.applicationId = applicationId;
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.forwardDate = forwardDate;
            GetNDFOrderValueDatesV2Response retVal = ((ValueDateServiceSoap)(this)).GetNDFOrderValueDatesV2(inValue);
            minimumForwardDate = retVal.minimumForwardDate;
            defaultForwardDate = retVal.defaultForwardDate;
            maximumForwardDate = retVal.maximumForwardDate;
            minimumFixingDate = retVal.minimumFixingDate;
            defaultFixingDate = retVal.defaultFixingDate;
            maximumFixingDate = retVal.maximumFixingDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetNDFOrderValueDatesV2Result;
        }
        
        public System.Threading.Tasks.Task<GetNDFOrderValueDatesV2Response> GetNDFOrderValueDatesV2Async(GetNDFOrderValueDatesV2Request request) {
            return base.Channel.GetNDFOrderValueDatesV2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetNDFOrderValueDatesResponse ValueDateServiceSoap.GetNDFOrderValueDates(GetNDFOrderValueDatesRequest request) {
            return base.Channel.GetNDFOrderValueDates(request);
        }
        
        public bool GetNDFOrderValueDates(int applicationId, int clientId, int targetCurrencyId, int settlementCurrencyId, System.Nullable<System.DateTime> forwardDate, out System.DateTime minimumForwardDate, out System.DateTime defaultForwardDate, out System.DateTime maximumForwardDate, out System.DateTime minimumFixingDate, out System.DateTime defaultFixingDate, out System.DateTime maximumFixingDate, out System.DateTime[] blackoutDates) {
            GetNDFOrderValueDatesRequest inValue = new GetNDFOrderValueDatesRequest();
            inValue.applicationId = applicationId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.forwardDate = forwardDate;
            GetNDFOrderValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetNDFOrderValueDates(inValue);
            minimumForwardDate = retVal.minimumForwardDate;
            defaultForwardDate = retVal.defaultForwardDate;
            maximumForwardDate = retVal.maximumForwardDate;
            minimumFixingDate = retVal.minimumFixingDate;
            defaultFixingDate = retVal.defaultFixingDate;
            maximumFixingDate = retVal.maximumFixingDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetNDFOrderValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetNDFOrderValueDatesResponse> GetNDFOrderValueDatesAsync(GetNDFOrderValueDatesRequest request) {
            return base.Channel.GetNDFOrderValueDatesAsync(request);
        }
        
        public System.DateTime[] GetReleaseDateFromValueDate(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime valueDate) {
            return base.Channel.GetReleaseDateFromValueDate(clientId, targetCurrencyId, settlementCurrencyId, itemTypeId, beneId, beneBankCountryId, beneBankSwiftAddress, valueDate);
        }
        
        public System.Threading.Tasks.Task<System.DateTime[]> GetReleaseDateFromValueDateAsync(int clientId, int targetCurrencyId, int settlementCurrencyId, int itemTypeId, int beneId, int beneBankCountryId, string beneBankSwiftAddress, System.DateTime valueDate) {
            return base.Channel.GetReleaseDateFromValueDateAsync(clientId, targetCurrencyId, settlementCurrencyId, itemTypeId, beneId, beneBankCountryId, beneBankSwiftAddress, valueDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetLockInValueDatesV2Response ValueDateServiceSoap.GetLockInValueDatesV2(GetLockInValueDatesV2Request request) {
            return base.Channel.GetLockInValueDatesV2(request);
        }
        
        public bool GetLockInValueDatesV2(int clientId, string targetCurrencyCode, string settlementCurrencyCode, int itemTypeId, ref System.DateTime orderDate, out System.DateTime minValueDate, out System.DateTime defaultValueDate, out System.DateTime maxValueDate, out System.DateTime[] blackoutDates) {
            GetLockInValueDatesV2Request inValue = new GetLockInValueDatesV2Request();
            inValue.clientId = clientId;
            inValue.targetCurrencyCode = targetCurrencyCode;
            inValue.settlementCurrencyCode = settlementCurrencyCode;
            inValue.itemTypeId = itemTypeId;
            inValue.orderDate = orderDate;
            GetLockInValueDatesV2Response retVal = ((ValueDateServiceSoap)(this)).GetLockInValueDatesV2(inValue);
            orderDate = retVal.orderDate;
            minValueDate = retVal.minValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maxValueDate = retVal.maxValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetLockInValueDatesV2Result;
        }
        
        public System.Threading.Tasks.Task<GetLockInValueDatesV2Response> GetLockInValueDatesV2Async(GetLockInValueDatesV2Request request) {
            return base.Channel.GetLockInValueDatesV2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetLockInValueDatesResponse ValueDateServiceSoap.GetLockInValueDates(GetLockInValueDatesRequest request) {
            return base.Channel.GetLockInValueDates(request);
        }
        
        public bool GetLockInValueDates(int clientId, int currencyId, int settlementCurrencyId, int itemTypeId, ref System.DateTime orderDate, out System.DateTime minValueDate, out System.DateTime defaultValueDate, out System.DateTime maxValueDate, out System.DateTime[] blackoutDates) {
            GetLockInValueDatesRequest inValue = new GetLockInValueDatesRequest();
            inValue.clientId = clientId;
            inValue.currencyId = currencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.itemTypeId = itemTypeId;
            inValue.orderDate = orderDate;
            GetLockInValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetLockInValueDates(inValue);
            orderDate = retVal.orderDate;
            minValueDate = retVal.minValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maxValueDate = retVal.maxValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetLockInValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetLockInValueDatesResponse> GetLockInValueDatesAsync(GetLockInValueDatesRequest request) {
            return base.Channel.GetLockInValueDatesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetDisburseValueDatesResponse ValueDateServiceSoap.GetDisburseValueDates(GetDisburseValueDatesRequest request) {
            return base.Channel.GetDisburseValueDates(request);
        }
        
        public bool GetDisburseValueDates(
                    int userId, 
                    int clientOrderId, 
                    int orderDetailId, 
                    int clientId, 
                    int targetCurrencyId, 
                    int settlementCurrencyId, 
                    int itemTypeId, 
                    int paymentMethodId, 
                    int beneId, 
                    int beneCountryId, 
                    int beneBankCountryId, 
                    int fundedBy, 
                    string beneBankSwiftAddress, 
                    System.DateTime orderDate, 
                    ContributingItem[] contributingItems, 
                    out System.DateTime minimumValueDate, 
                    out System.DateTime defaultValueDate, 
                    out System.DateTime maximumValueDate, 
                    out System.DateTime[] blackoutDates) {
            GetDisburseValueDatesRequest inValue = new GetDisburseValueDatesRequest();
            inValue.userId = userId;
            inValue.clientOrderId = clientOrderId;
            inValue.orderDetailId = orderDetailId;
            inValue.clientId = clientId;
            inValue.targetCurrencyId = targetCurrencyId;
            inValue.settlementCurrencyId = settlementCurrencyId;
            inValue.itemTypeId = itemTypeId;
            inValue.paymentMethodId = paymentMethodId;
            inValue.beneId = beneId;
            inValue.beneCountryId = beneCountryId;
            inValue.beneBankCountryId = beneBankCountryId;
            inValue.fundedBy = fundedBy;
            inValue.beneBankSwiftAddress = beneBankSwiftAddress;
            inValue.orderDate = orderDate;
            inValue.contributingItems = contributingItems;
            GetDisburseValueDatesResponse retVal = ((ValueDateServiceSoap)(this)).GetDisburseValueDates(inValue);
            minimumValueDate = retVal.minimumValueDate;
            defaultValueDate = retVal.defaultValueDate;
            maximumValueDate = retVal.maximumValueDate;
            blackoutDates = retVal.blackoutDates;
            return retVal.GetDisburseValueDatesResult;
        }
        
        public System.Threading.Tasks.Task<GetDisburseValueDatesResponse> GetDisburseValueDatesAsync(GetDisburseValueDatesRequest request) {
            return base.Channel.GetDisburseValueDatesAsync(request);
        }
    }
}
